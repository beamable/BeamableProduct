def ctx = context(scope: scriptScope())
contributor(ctx) {
  method(name: 'parallel', type: 'Object', params: ['closures':'java.util.Map'], doc: 'Execute in parallel')
  method(name: 'parallel', type: 'Object', namedParams: [parameter(name: 'closures', type: 'java.util.Map'), parameter(name: 'failFast', type: 'boolean'), ], doc: 'Execute in parallel')
  method(name: 'VersionNumber', type: 'Object', params: [versionNumberString:'java.lang.String'], doc: 'Determine the correct version number')
  method(name: 'VersionNumber', type: 'Object', namedParams: [parameter(name: 'versionNumberString', type: 'java.lang.String'), parameter(name: 'overrideBuildsAllTime', type: 'java.lang.String'), parameter(name: 'overrideBuildsThisMonth', type: 'java.lang.String'), parameter(name: 'overrideBuildsThisWeek', type: 'java.lang.String'), parameter(name: 'overrideBuildsThisYear', type: 'java.lang.String'), parameter(name: 'overrideBuildsToday', type: 'java.lang.String'), parameter(name: 'projectStartDate', type: 'java.lang.String'), parameter(name: 'skipFailedBuilds', type: 'boolean'), parameter(name: 'versionPrefix', type: 'java.lang.String'), parameter(name: 'worstResultForIncrement', type: 'java.lang.String'), ], doc: 'Determine the correct version number')
  method(name: 'addBadge', type: 'Object', namedParams: [parameter(name: 'icon', type: 'java.lang.String'), parameter(name: 'text', type: 'java.lang.String'), parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'link', type: 'java.lang.String'), ], doc: 'Add Badge')
  method(name: 'addErrorBadge', type: 'Object', params: [text:'java.lang.String'], doc: 'Add Error Badge')
  method(name: 'addErrorBadge', type: 'Object', namedParams: [parameter(name: 'text', type: 'java.lang.String'), parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'link', type: 'java.lang.String'), ], doc: 'Add Error Badge')
  method(name: 'addHtmlBadge', type: 'Object', params: [html:'java.lang.String'], doc: 'Add a html badge Text')
  method(name: 'addHtmlBadge', type: 'Object', namedParams: [parameter(name: 'html', type: 'java.lang.String'), parameter(name: 'id', type: 'java.lang.String'), ], doc: 'Add a html badge Text')
  method(name: 'addInfoBadge', type: 'Object', params: [text:'java.lang.String'], doc: 'Add Info Badge')
  method(name: 'addInfoBadge', type: 'Object', namedParams: [parameter(name: 'text', type: 'java.lang.String'), parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'link', type: 'java.lang.String'), ], doc: 'Add Info Badge')
  method(name: 'addShortText', type: 'Object', params: [text:'java.lang.String'], doc: 'Add Short Text')
  method(name: 'addShortText', type: 'Object', namedParams: [parameter(name: 'text', type: 'java.lang.String'), parameter(name: 'background', type: 'java.lang.String'), parameter(name: 'border', type: 'java.lang.Integer'), parameter(name: 'borderColor', type: 'java.lang.String'), parameter(name: 'color', type: 'java.lang.String'), parameter(name: 'link', type: 'java.lang.String'), ], doc: 'Add Short Text')
  method(name: 'addWarningBadge', type: 'Object', params: [text:'java.lang.String'], doc: 'Add Warning Badge')
  method(name: 'addWarningBadge', type: 'Object', namedParams: [parameter(name: 'text', type: 'java.lang.String'), parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'link', type: 'java.lang.String'), ], doc: 'Add Warning Badge')
  method(name: 'build', type: 'Object', params: [job:'java.lang.String'], doc: 'Build a job')
  method(name: 'build', type: 'Object', namedParams: [parameter(name: 'job', type: 'java.lang.String'), parameter(name: 'parameters', type: 'java.util.List'), parameter(name: 'propagate', type: 'boolean'), parameter(name: 'quietPeriod', type: 'java.lang.Integer'), parameter(name: 'wait', type: 'boolean'), ], doc: 'Build a job')
  method(name: 'catchError', type: 'Object', params: [body:'Closure'], doc: 'Catch error and set build result to failure')
  method(name: 'catchError', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'buildResult', type: 'java.lang.String'), parameter(name: 'catchInterruptions', type: 'boolean'), parameter(name: 'message', type: 'java.lang.String'), parameter(name: 'stageResult', type: 'java.lang.String'), ], doc: 'Catch error and set build result to failure')
  method(name: 'createSummary', type: 'Object', params: [icon:'java.lang.String'], doc: 'Print Message')
  method(name: 'createSummary', type: 'Object', namedParams: [parameter(name: 'icon', type: 'java.lang.String'), parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'text', type: 'java.lang.String'), ], doc: 'Print Message')
  method(name: 'ec2', type: 'Object', namedParams: [parameter(name: 'cloud', type: 'java.lang.String'), parameter(name: 'template', type: 'java.lang.String'), ], doc: 'Cloud template provisioning')
  method(name: 'echo', type: 'Object', params: [message:'java.lang.String'], doc: 'Print Message')
  method(name: 'emailext', type: 'Object', namedParams: [parameter(name: 'subject', type: 'java.lang.String'), parameter(name: 'body', type: 'java.lang.String'), parameter(name: 'attachLog', type: 'boolean'), parameter(name: 'attachmentsPattern', type: 'java.lang.String'), parameter(name: 'compressLog', type: 'boolean'), parameter(name: 'from', type: 'java.lang.String'), parameter(name: 'mimeType', type: 'java.lang.String'), parameter(name: 'postsendScript', type: 'java.lang.String'), parameter(name: 'presendScript', type: 'java.lang.String'), parameter(name: 'recipientProviders', type: 'java.util.List'), parameter(name: 'replyTo', type: 'java.lang.String'), parameter(name: 'saveOutput', type: 'boolean'), parameter(name: 'to', type: 'java.lang.String'), ], doc: 'Extended Email')
  method(name: 'emailextrecipients', type: 'Object', params: [recipientProviders:'java.util.List'], doc: 'Extended Email Recipients')
  method(name: 'error', type: 'Object', params: [message:'java.lang.String'], doc: 'Error signal')
  method(name: 'findBuildScans', type: 'Object', params: [:], doc: 'Find published build scans')
  method(name: 'getDatabaseConnection', type: 'Object', params: [body:'Closure'], doc: 'Get Database Connection')
  method(name: 'getDatabaseConnection', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'type', type: 'Map'), ], doc: 'Get Database Connection')
  method(name: 'httpRequest', type: 'Object', params: [url:'java.lang.String'], doc: 'Perform an HTTP Request and return a response object')
  method(name: 'httpRequest', type: 'Object', namedParams: [parameter(name: 'url', type: 'java.lang.String'), parameter(name: 'acceptType', type: 'Map'), parameter(name: 'authentication', type: 'java.lang.String'), parameter(name: 'consoleLogResponseBody', type: 'java.lang.Boolean'), parameter(name: 'contentType', type: 'Map'), parameter(name: 'customHeaders', type: 'java.util.List'), parameter(name: 'httpMode', type: 'Map'), parameter(name: 'httpProxy', type: 'java.lang.String'), parameter(name: 'ignoreSslErrors', type: 'boolean'), parameter(name: 'multipartName', type: 'java.lang.String'), parameter(name: 'outputFile', type: 'java.lang.String'), parameter(name: 'quiet', type: 'java.lang.Boolean'), parameter(name: 'requestBody', type: 'java.lang.String'), parameter(name: 'responseHandle', type: 'Map'), parameter(name: 'timeout', type: 'java.lang.Integer'), parameter(name: 'uploadFile', type: 'java.lang.String'), parameter(name: 'useSystemProperties', type: 'java.lang.Boolean'), parameter(name: 'validResponseCodes', type: 'java.lang.String'), parameter(name: 'validResponseContent', type: 'java.lang.String'), ], doc: 'Perform an HTTP Request and return a response object')
  method(name: 'input', type: 'Object', params: [message:'java.lang.String'], doc: 'Wait for interactive input')
  method(name: 'input', type: 'Object', namedParams: [parameter(name: 'message', type: 'java.lang.String'), parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'ok', type: 'java.lang.String'), parameter(name: 'parameters', type: 'java.util.List'), parameter(name: 'submitter', type: 'java.lang.String'), parameter(name: 'submitterParameter', type: 'java.lang.String'), ], doc: 'Wait for interactive input')
  method(name: 'isUnix', type: 'Object', params: [:], doc: 'Checks if running on a Unix-like node')
  method(name: 'library', type: 'Object', params: [identifier:'java.lang.String'], doc: 'Load a shared library on the fly')
  method(name: 'library', type: 'Object', namedParams: [parameter(name: 'identifier', type: 'java.lang.String'), parameter(name: 'changelog', type: 'java.lang.Boolean'), parameter(name: 'retriever', type: 'Map'), ], doc: 'Load a shared library on the fly')
  method(name: 'libraryResource', type: 'Object', params: [resource:'java.lang.String'], doc: 'Load a resource file from a shared library')
  method(name: 'libraryResource', type: 'Object', namedParams: [parameter(name: 'resource', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), ], doc: 'Load a resource file from a shared library')
  method(name: 'lock', type: 'Object', params: [resource:java.lang.String, body:'Closure'], doc: 'Lock shared resource')
  method(name: 'lock', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'resource', type: 'java.lang.String'), parameter(name: 'extra', type: 'java.util.List'), parameter(name: 'inversePrecedence', type: 'boolean'), parameter(name: 'label', type: 'java.lang.String'), parameter(name: 'quantity', type: 'int'), parameter(name: 'variable', type: 'java.lang.String'), ], doc: 'Lock shared resource')
  method(name: 'mail', type: 'Object', namedParams: [parameter(name: 'subject', type: 'java.lang.String'), parameter(name: 'body', type: 'java.lang.String'), parameter(name: 'bcc', type: 'java.lang.String'), parameter(name: 'cc', type: 'java.lang.String'), parameter(name: 'charset', type: 'java.lang.String'), parameter(name: 'from', type: 'java.lang.String'), parameter(name: 'mimeType', type: 'java.lang.String'), parameter(name: 'replyTo', type: 'java.lang.String'), parameter(name: 'to', type: 'java.lang.String'), ], doc: 'Mail')
  method(name: 'milestone', type: 'Object', params: [ordinal:'java.lang.Integer'], doc: 'The milestone step forces all builds to go through in order')
  method(name: 'milestone', type: 'Object', namedParams: [parameter(name: 'ordinal', type: 'java.lang.Integer'), parameter(name: 'label', type: 'java.lang.String'), ], doc: 'The milestone step forces all builds to go through in order')
  method(name: 'node', type: 'Object', params: [label:java.lang.String, body:'Closure'], doc: 'Allocate node')
  method(name: 'properties', type: 'Object', params: [properties:'java.util.List'], doc: 'Set job properties')
  method(name: 'publishIssues', type: 'Object', params: [issues:'java.util.List'], doc: 'Publish issues created by a static analysis scan')
  method(name: 'publishIssues', type: 'Object', namedParams: [parameter(name: 'issues', type: 'java.util.List'), parameter(name: 'failOnError', type: 'boolean'), parameter(name: 'failedNewAll', type: 'int'), parameter(name: 'failedNewHigh', type: 'int'), parameter(name: 'failedNewLow', type: 'int'), parameter(name: 'failedNewNormal', type: 'int'), parameter(name: 'failedTotalAll', type: 'int'), parameter(name: 'failedTotalHigh', type: 'int'), parameter(name: 'failedTotalLow', type: 'int'), parameter(name: 'failedTotalNormal', type: 'int'), parameter(name: 'healthy', type: 'int'), parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'ignoreFailedBuilds', type: 'boolean'), parameter(name: 'ignoreQualityGate', type: 'boolean'), parameter(name: 'minimumSeverity', type: 'java.lang.String'), parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'qualityGates', type: 'java.util.List'), parameter(name: 'referenceJobName', type: 'java.lang.String'), parameter(name: 'sourceCodeEncoding', type: 'java.lang.String'), parameter(name: 'trendChartType', type: 'Map'), parameter(name: 'unhealthy', type: 'int'), parameter(name: 'unstableNewAll', type: 'int'), parameter(name: 'unstableNewHigh', type: 'int'), parameter(name: 'unstableNewLow', type: 'int'), parameter(name: 'unstableNewNormal', type: 'int'), parameter(name: 'unstableTotalAll', type: 'int'), parameter(name: 'unstableTotalHigh', type: 'int'), parameter(name: 'unstableTotalLow', type: 'int'), parameter(name: 'unstableTotalNormal', type: 'int'), ], doc: 'Publish issues created by a static analysis scan')
  method(name: 'readTrusted', type: 'Object', params: [path:'java.lang.String'], doc: 'Read trusted file from SCM')
  method(name: 'removeBadges', type: 'Object', params: [:], doc: 'Remove Badges')
  method(name: 'removeBadges', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), ], doc: 'Remove Badges')
  method(name: 'removeHtmlBadges', type: 'Object', params: [:], doc: 'Remove Html Badges')
  method(name: 'removeHtmlBadges', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), ], doc: 'Remove Html Badges')
  method(name: 'removeSummaries', type: 'Object', params: [:], doc: 'Remove Summaries')
  method(name: 'removeSummaries', type: 'Object', namedParams: [parameter(name: 'id', type: 'java.lang.String'), ], doc: 'Remove Summaries')
  method(name: 'resolveScm', type: 'Object', namedParams: [parameter(name: 'source', type: 'Map'), parameter(name: 'targets', type: 'java.util.List'), parameter(name: 'ignoreErrors', type: 'boolean'), ], doc: 'Resolves an SCM from an SCM Source and a list of candidate target branch names')
  method(name: 'retry', type: 'Object', params: [count:int, body:'Closure'], doc: 'Retry the body up to N times')
  method(name: 'script', type: 'Object', params: [body:'Closure'], doc: 'Run arbitrary Pipeline script')
  method(name: 'slackSend', type: 'Object', params: [:], doc: 'Send Slack Message')
  method(name: 'slackSend', type: 'Object', namedParams: [parameter(name: 'attachments', type: 'java.lang.Object'), parameter(name: 'baseUrl', type: 'java.lang.String'), parameter(name: 'blocks', type: 'java.lang.Object'), parameter(name: 'botUser', type: 'boolean'), parameter(name: 'channel', type: 'java.lang.String'), parameter(name: 'color', type: 'java.lang.String'), parameter(name: 'failOnError', type: 'boolean'), parameter(name: 'iconEmoji', type: 'java.lang.String'), parameter(name: 'message', type: 'java.lang.String'), parameter(name: 'notifyCommitters', type: 'boolean'), parameter(name: 'replyBroadcast', type: 'boolean'), parameter(name: 'sendAsText', type: 'boolean'), parameter(name: 'teamDomain', type: 'java.lang.String'), parameter(name: 'token', type: 'java.lang.String'), parameter(name: 'tokenCredentialId', type: 'java.lang.String'), parameter(name: 'username', type: 'java.lang.String'), ], doc: 'Send Slack Message')
  method(name: 'sleep', type: 'Object', params: [time:'int'], doc: 'Sleep')
  method(name: 'sleep', type: 'Object', namedParams: [parameter(name: 'time', type: 'int'), parameter(name: 'unit', type: 'java.util.concurrent.TimeUnit'), ], doc: 'Sleep')
  method(name: 'sql', type: 'Object', params: [sql:'java.lang.String'], doc: 'Run SQL')
  method(name: 'sql', type: 'Object', namedParams: [parameter(name: 'sql', type: 'java.lang.String'), parameter(name: 'connection', type: 'java.lang.String'), parameter(name: 'parameters', type: 'java.util.List'), ], doc: 'Run SQL')
  method(name: 'stage', type: 'Object', params: [name:java.lang.String, body:'Closure'], doc: 'Stage')
  method(name: 'stage', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'concurrency', type: 'java.lang.Integer'), ], doc: 'Stage')
  method(name: 'throttle', type: 'Object', params: [categories:java.util.List, body:'Closure'], doc: 'Throttle execution of node blocks within this body')
  method(name: 'timeout', type: 'Object', params: [time:int, body:'Closure'], doc: 'Enforce time limit')
  method(name: 'timeout', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'time', type: 'int'), parameter(name: 'activity', type: 'boolean'), parameter(name: 'unit', type: 'java.util.concurrent.TimeUnit'), ], doc: 'Enforce time limit')
  method(name: 'timestamps', type: 'Object', params: [body:'Closure'], doc: 'Timestamps')
  method(name: 'tool', type: 'Object', params: [name:'java.lang.String'], doc: 'Use a tool from a predefined Tool Installation')
  method(name: 'tool', type: 'Object', namedParams: [parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'type', type: 'java.lang.String'), ], doc: 'Use a tool from a predefined Tool Installation')
  method(name: 'unstable', type: 'Object', params: [message:'java.lang.String'], doc: 'Set stage result to unstable')
  method(name: 'waitUntil', type: 'Object', params: [body:'Closure'], doc: 'Wait for condition')
  method(name: 'waitUntil', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'initialRecurrencePeriod', type: 'long'), ], doc: 'Wait for condition')
  method(name: 'warnError', type: 'Object', params: [message:java.lang.String, body:'Closure'], doc: 'Catch error and set build and stage result to unstable')
  method(name: 'warnError', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'message', type: 'java.lang.String'), parameter(name: 'catchInterruptions', type: 'boolean'), ], doc: 'Catch error and set build and stage result to unstable')
  method(name: 'withCredentials', type: 'Object', params: [bindings:java.util.List, body:'Closure'], doc: 'Bind credentials to variables')
  method(name: 'withEnv', type: 'Object', params: [overrides:java.util.List, body:'Closure'], doc: 'Set environment variables')
  method(name: 'ws', type: 'Object', params: [dir:java.lang.String, body:'Closure'], doc: 'Allocate workspace')
  method(name: 'dockerFingerprintRun', type: 'Object', params: [containerId:'java.lang.String'], doc: 'Advanced/Deprecated Record trace of a Docker image run in a container')
  method(name: 'dockerFingerprintRun', type: 'Object', namedParams: [parameter(name: 'containerId', type: 'java.lang.String'), parameter(name: 'toolName', type: 'java.lang.String'), ], doc: 'Record trace of a Docker image run in a container')
  method(name: 'envVarsForTool', type: 'Object', namedParams: [parameter(name: 'toolId', type: 'java.lang.String'), parameter(name: 'toolVersion', type: 'java.lang.String'), ], doc: 'Fetches the environment variables for a given tool in a list of \'FOO=bar\' strings suitable for the withEnv step.')
  method(name: 'getContext', type: 'Object', params: [type:'Map'], doc: 'Advanced/Deprecated Get contextual object from internal APIs')
  method(name: 'withContext', type: 'Object', params: [context:java.lang.Object, body:'Closure'], doc: 'Advanced/Deprecated Use contextual object from internal APIs within a block')
  property(name: 'publishConfluence', type: 'com.myyearbook.hudson.plugins.confluence.ConfluenceDSL')
  property(name: 'docker', type: 'org.jenkinsci.plugins.docker.workflow.DockerDSL')
  property(name: 'pipeline', type: 'org.jenkinsci.plugins.pipeline.modeldefinition.ModelStepLoader')
  property(name: 'env', type: 'org.jenkinsci.plugins.workflow.cps.EnvActionImpl.Binder')
  property(name: 'params', type: 'org.jenkinsci.plugins.workflow.cps.ParamsVariable')
  property(name: 'currentBuild', type: 'org.jenkinsci.plugins.workflow.cps.RunWrapperBinder')
  property(name: 'scm', type: 'org.jenkinsci.plugins.workflow.multibranch.SCMVar')
  property(name: 'manager', type: 'org.jvnet.hudson.plugins.groovypostbuild.WorkflowManager')
}
//Steps that require a node context
def nodeCtx = context(scope: closureScope())
contributor(nodeCtx) {
  def call = enclosingCall('node')
  if (call) {
    method(name: 'awsCodeBuild', type: 'Object', params: [projectName:'java.lang.String'], doc: 'Invoke an AWS CodeBuild build')
    method(name: 'awsCodeBuild', type: 'Object', namedParams: [parameter(name: 'projectName', type: 'java.lang.String'), parameter(name: 'artifactEncryptionDisabledOverride', type: 'java.lang.String'), parameter(name: 'artifactLocationOverride', type: 'java.lang.String'), parameter(name: 'artifactNameOverride', type: 'java.lang.String'), parameter(name: 'artifactNamespaceOverride', type: 'java.lang.String'), parameter(name: 'artifactPackagingOverride', type: 'java.lang.String'), parameter(name: 'artifactPathOverride', type: 'java.lang.String'), parameter(name: 'artifactTypeOverride', type: 'java.lang.String'), parameter(name: 'awsAccessKey', type: 'java.lang.String'), parameter(name: 'awsSecretKey', type: 'java.lang.String'), parameter(name: 'awsSessionToken', type: 'java.lang.String'), parameter(name: 'buildSpecFile', type: 'java.lang.String'), parameter(name: 'buildTimeoutOverride', type: 'java.lang.String'), parameter(name: 'cacheLocationOverride', type: 'java.lang.String'), parameter(name: 'cacheTypeOverride', type: 'java.lang.String'), parameter(name: 'certificateOverride', type: 'java.lang.String'), parameter(name: 'cloudWatchLogsGroupNameOverride', type: 'java.lang.String'), parameter(name: 'cloudWatchLogsStatusOverride', type: 'java.lang.String'), parameter(name: 'cloudWatchLogsStreamNameOverride', type: 'java.lang.String'), parameter(name: 'computeTypeOverride', type: 'java.lang.String'), parameter(name: 'credentialsId', type: 'java.lang.String'), parameter(name: 'credentialsType', type: 'java.lang.String'), parameter(name: 'cwlStreamingDisabled', type: 'java.lang.String'), parameter(name: 'downloadArtifacts', type: 'java.lang.String'), parameter(name: 'downloadArtifactsRelativePath', type: 'java.lang.String'), parameter(name: 'envParameters', type: 'java.lang.String'), parameter(name: 'envVariables', type: 'java.lang.String'), parameter(name: 'environmentTypeOverride', type: 'java.lang.String'), parameter(name: 'exceptionFailureMode', type: 'java.lang.String'), parameter(name: 'gitCloneDepthOverride', type: 'java.lang.String'), parameter(name: 'imageOverride', type: 'java.lang.String'), parameter(name: 'insecureSslOverride', type: 'java.lang.String'), parameter(name: 'localSourcePath', type: 'java.lang.String'), parameter(name: 'overrideArtifactName', type: 'java.lang.String'), parameter(name: 'privilegedModeOverride', type: 'java.lang.String'), parameter(name: 'proxyHost', type: 'java.lang.String'), parameter(name: 'proxyPort', type: 'java.lang.String'), parameter(name: 'region', type: 'java.lang.String'), parameter(name: 'reportBuildStatusOverride', type: 'java.lang.String'), parameter(name: 's3LogsEncryptionDisabledOverrideOverride', type: 'java.lang.String'), parameter(name: 's3LogsLocationOverride', type: 'java.lang.String'), parameter(name: 's3LogsStatusOverride', type: 'java.lang.String'), parameter(name: 'secondaryArtifactsOverride', type: 'java.lang.String'), parameter(name: 'secondarySourcesOverride', type: 'java.lang.String'), parameter(name: 'secondarySourcesVersionOverride', type: 'java.lang.String'), parameter(name: 'serviceRoleOverride', type: 'java.lang.String'), parameter(name: 'sourceControlType', type: 'java.lang.String'), parameter(name: 'sourceLocationOverride', type: 'java.lang.String'), parameter(name: 'sourceTypeOverride', type: 'java.lang.String'), parameter(name: 'sourceVersion', type: 'java.lang.String'), parameter(name: 'sseAlgorithm', type: 'java.lang.String'), parameter(name: 'workspaceSubdir', type: 'java.lang.String'), ], doc: 'Invoke an AWS CodeBuild build')
    method(name: 'bat', type: 'Object', params: [script:'java.lang.String'], doc: 'Windows Batch Script')
    method(name: 'bat', type: 'Object', namedParams: [parameter(name: 'script', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), parameter(name: 'label', type: 'java.lang.String'), parameter(name: 'returnStatus', type: 'boolean'), parameter(name: 'returnStdout', type: 'boolean'), ], doc: 'Windows Batch Script')
    method(name: 'checkout', type: 'Object', params: [scm:'Map'], doc: 'Check out from version control')
    method(name: 'checkout', type: 'Object', namedParams: [parameter(name: 'scm', type: 'Map'), parameter(name: 'changelog', type: 'boolean'), parameter(name: 'poll', type: 'boolean'), ], doc: 'Check out from version control')
    method(name: 'deleteDir', type: 'Object', params: [:], doc: 'Recursively delete the current directory from the workspace')
    method(name: 'dir', type: 'Object', params: [path:java.lang.String, body:'Closure'], doc: 'Change current directory')
    method(name: 'dropbox', type: 'Object', namedParams: [parameter(name: 'sourceFiles', type: 'java.lang.String'), parameter(name: 'remoteDirectory', type: 'java.lang.String'), parameter(name: 'configName', type: 'java.lang.String'), parameter(name: 'cleanRemote', type: 'boolean'), parameter(name: 'excludes', type: 'java.lang.String'), parameter(name: 'flatten', type: 'boolean'), parameter(name: 'pruneDays', type: 'int'), parameter(name: 'pruneRoot', type: 'boolean'), parameter(name: 'remoteDirectorySDF', type: 'boolean'), parameter(name: 'removePrefix', type: 'java.lang.String'), ], doc: 'Publish to Dropbox folder')
    method(name: 'fileExists', type: 'Object', params: [file:'java.lang.String'], doc: 'Verify if file exists in workspace')
    method(name: 'git', type: 'Object', params: [url:'java.lang.String'], doc: 'Git')
    method(name: 'git', type: 'Object', namedParams: [parameter(name: 'url', type: 'java.lang.String'), parameter(name: 'branch', type: 'java.lang.String'), parameter(name: 'changelog', type: 'boolean'), parameter(name: 'credentialsId', type: 'java.lang.String'), parameter(name: 'poll', type: 'boolean'), ], doc: 'Git')
    method(name: 'junit', type: 'Object', params: [testResults:'java.lang.String'], doc: 'Archive JUnit-formatted test results')
    method(name: 'junit', type: 'Object', namedParams: [parameter(name: 'testResults', type: 'java.lang.String'), parameter(name: 'allowEmptyResults', type: 'boolean'), parameter(name: 'healthScaleFactor', type: 'double'), parameter(name: 'keepLongStdio', type: 'boolean'), parameter(name: 'testDataPublishers', type: 'java.util.List'), ], doc: 'Archive JUnit-formatted test results')
    method(name: 'load', type: 'Object', params: [path:'java.lang.String'], doc: 'Evaluate a Groovy source file into the Pipeline script')
    method(name: 'p4', type: 'Object', namedParams: [parameter(name: 'credential', type: 'java.lang.String'), parameter(name: 'workspace', type: 'Map'), ], doc: 'P4 Groovy')
    method(name: 'p4approve', type: 'Object', namedParams: [parameter(name: 'credential', type: 'java.lang.String'), parameter(name: 'review', type: 'java.lang.String'), parameter(name: 'status', type: 'java.lang.String'), parameter(name: 'description', type: 'java.lang.String'), ], doc: 'P4 ApproveImpl Review')
    method(name: 'p4publish', type: 'Object', namedParams: [parameter(name: 'credential', type: 'java.lang.String'), parameter(name: 'workspace', type: 'Map'), parameter(name: 'publish', type: 'Map'), ], doc: 'P4 Publish')
    method(name: 'p4sync', type: 'Object', params: [credential:'java.lang.String'], doc: 'P4 Sync')
    method(name: 'p4sync', type: 'Object', namedParams: [parameter(name: 'credential', type: 'java.lang.String'), parameter(name: 'changelog', type: 'boolean'), parameter(name: 'charset', type: 'java.lang.String'), parameter(name: 'depotPath', type: 'java.lang.String'), parameter(name: 'format', type: 'java.lang.String'), parameter(name: 'poll', type: 'boolean'), parameter(name: 'populate', type: 'Map'), parameter(name: 'source', type: 'Map'), parameter(name: 'stream', type: 'java.lang.String'), parameter(name: 'template', type: 'java.lang.String'), parameter(name: 'workspace', type: 'Map'), ], doc: 'P4 Sync')
    method(name: 'p4tag', type: 'Object', namedParams: [parameter(name: 'rawLabelName', type: 'java.lang.String'), parameter(name: 'rawLabelDesc', type: 'java.lang.String'), ], doc: 'P4 Tag')
    method(name: 'p4unshelve', type: 'Object', namedParams: [parameter(name: 'credential', type: 'java.lang.String'), parameter(name: 'workspace', type: 'Map'), parameter(name: 'shelf', type: 'java.lang.String'), parameter(name: 'resolve', type: 'java.lang.String'), parameter(name: 'tidy', type: 'boolean'), parameter(name: 'ignoreEmpty', type: 'boolean'), ], doc: 'P4 Unshelve')
    method(name: 'powershell', type: 'Object', params: [script:'java.lang.String'], doc: 'PowerShell Script')
    method(name: 'powershell', type: 'Object', namedParams: [parameter(name: 'script', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), parameter(name: 'label', type: 'java.lang.String'), parameter(name: 'returnStatus', type: 'boolean'), parameter(name: 'returnStdout', type: 'boolean'), ], doc: 'PowerShell Script')
    method(name: 'publishHTML', type: 'Object', params: [target:'Map'], doc: 'Publish HTML reports')
    method(name: 'pwd', type: 'Object', params: [:], doc: 'Determine current directory')
    method(name: 'pwd', type: 'Object', namedParams: [parameter(name: 'tmp', type: 'boolean'), ], doc: 'Determine current directory')
    method(name: 'readFile', type: 'Object', params: [file:'java.lang.String'], doc: 'Read file from workspace')
    method(name: 'readFile', type: 'Object', namedParams: [parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), ], doc: 'Read file from workspace')
    method(name: 'recordIssues', type: 'Object', params: [:], doc: 'Record compiler warnings and static analysis results')
    method(name: 'recordIssues', type: 'Object', namedParams: [parameter(name: 'aggregatingResults', type: 'boolean'), parameter(name: 'blameDisabled', type: 'boolean'), parameter(name: 'enabledForFailure', type: 'boolean'), parameter(name: 'failOnError', type: 'boolean'), parameter(name: 'failedNewAll', type: 'int'), parameter(name: 'failedNewHigh', type: 'int'), parameter(name: 'failedNewLow', type: 'int'), parameter(name: 'failedNewNormal', type: 'int'), parameter(name: 'failedTotalAll', type: 'int'), parameter(name: 'failedTotalHigh', type: 'int'), parameter(name: 'failedTotalLow', type: 'int'), parameter(name: 'failedTotalNormal', type: 'int'), parameter(name: 'filters', type: 'java.util.List'), parameter(name: 'forensicsDisabled', type: 'boolean'), parameter(name: 'healthy', type: 'int'), parameter(name: 'id', type: 'java.lang.String'), parameter(name: 'ignoreFailedBuilds', type: 'boolean'), parameter(name: 'ignoreQualityGate', type: 'boolean'), parameter(name: 'minimumSeverity', type: 'java.lang.String'), parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'qualityGates', type: 'java.util.List'), parameter(name: 'referenceJobName', type: 'java.lang.String'), parameter(name: 'sourceCodeEncoding', type: 'java.lang.String'), parameter(name: 'sourceDirectory', type: 'java.lang.String'), parameter(name: 'tool', type: 'Map'), parameter(name: 'toolProxies', type: 'java.util.List'), parameter(name: 'tools', type: 'java.util.List'), parameter(name: 'trendChartType', type: 'Map'), parameter(name: 'unhealthy', type: 'int'), parameter(name: 'unstableNewAll', type: 'int'), parameter(name: 'unstableNewHigh', type: 'int'), parameter(name: 'unstableNewLow', type: 'int'), parameter(name: 'unstableNewNormal', type: 'int'), parameter(name: 'unstableTotalAll', type: 'int'), parameter(name: 'unstableTotalHigh', type: 'int'), parameter(name: 'unstableTotalLow', type: 'int'), parameter(name: 'unstableTotalNormal', type: 'int'), ], doc: 'Record compiler warnings and static analysis results')
    method(name: 'runInCloud', type: 'Object', namedParams: [parameter(name: 'projectId', type: 'java.lang.String'), parameter(name: 'deviceGroupId', type: 'java.lang.String'), parameter(name: 'appPath', type: 'java.lang.String'), parameter(name: 'cloudUIUrl', type: 'java.lang.String'), parameter(name: 'cloudUrl', type: 'java.lang.String'), parameter(name: 'credentialsId', type: 'java.lang.String'), parameter(name: 'dataPath', type: 'java.lang.String'), parameter(name: 'failBuildIfThisStepFailed', type: 'boolean'), parameter(name: 'frameworkId', type: 'java.lang.Long'), parameter(name: 'keyValuePairs', type: 'java.lang.String'), parameter(name: 'language', type: 'java.lang.String'), parameter(name: 'osType', type: 'Map'), parameter(name: 'scheduler', type: 'java.lang.String'), parameter(name: 'screenshotsDirectory', type: 'java.lang.String'), parameter(name: 'testCasesSelect', type: 'java.lang.String'), parameter(name: 'testCasesValue', type: 'java.lang.String'), parameter(name: 'testPath', type: 'java.lang.String'), parameter(name: 'testRunName', type: 'java.lang.String'), parameter(name: 'testRunner', type: 'java.lang.String'), parameter(name: 'testTimeout', type: 'java.lang.String'), parameter(name: 'waitForResultsBlock', type: 'Map'), parameter(name: 'withAnnotation', type: 'java.lang.String'), parameter(name: 'withoutAnnotation', type: 'java.lang.String'), ], doc: 'Start a run in Bitbar Cloud')
    method(name: 'scanForIssues', type: 'Object', params: [:], doc: 'Scan files or the console log for warnings or issues')
    method(name: 'scanForIssues', type: 'Object', namedParams: [parameter(name: 'blameDisabled', type: 'boolean'), parameter(name: 'filters', type: 'java.util.List'), parameter(name: 'forensicsDisabled', type: 'boolean'), parameter(name: 'sourceCodeEncoding', type: 'java.lang.String'), parameter(name: 'sourceDirectory', type: 'java.lang.String'), parameter(name: 'tool', type: 'Map'), ], doc: 'Scan files or the console log for warnings or issues')
    method(name: 'sh', type: 'Object', params: [script:'java.lang.String'], doc: 'Shell Script')
    method(name: 'sh', type: 'Object', namedParams: [parameter(name: 'script', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), parameter(name: 'label', type: 'java.lang.String'), parameter(name: 'returnStatus', type: 'boolean'), parameter(name: 'returnStdout', type: 'boolean'), ], doc: 'Shell Script')
    method(name: 'slackUploadFile', type: 'Object', params: [filePath:'java.lang.String'], doc: 'Upload file to slack')
    method(name: 'slackUploadFile', type: 'Object', namedParams: [parameter(name: 'filePath', type: 'java.lang.String'), parameter(name: 'channel', type: 'java.lang.String'), parameter(name: 'credentialId', type: 'java.lang.String'), parameter(name: 'initialComment', type: 'java.lang.String'), ], doc: 'Upload file to slack')
    method(name: 'sshagent', type: 'Object', params: [credentials:java.util.List, body:'Closure'], doc: 'SSH Agent')
    method(name: 'sshagent', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'credentials', type: 'java.util.List'), parameter(name: 'ignoreMissing', type: 'boolean'), ], doc: 'SSH Agent')
    method(name: 'stash', type: 'Object', params: [name:'java.lang.String'], doc: 'Stash some files to be used later in the build')
    method(name: 'stash', type: 'Object', namedParams: [parameter(name: 'name', type: 'java.lang.String'), parameter(name: 'allowEmpty', type: 'boolean'), parameter(name: 'excludes', type: 'java.lang.String'), parameter(name: 'includes', type: 'java.lang.String'), parameter(name: 'useDefaultExcludes', type: 'boolean'), ], doc: 'Stash some files to be used later in the build')
    method(name: 'step', type: 'Object', params: [delegate:'Map'], doc: 'General Build Step')
    method(name: 'svn', type: 'Object', params: [url:'java.lang.String'], doc: 'Subversion')
    method(name: 'svn', type: 'Object', namedParams: [parameter(name: 'url', type: 'java.lang.String'), parameter(name: 'changelog', type: 'boolean'), parameter(name: 'poll', type: 'boolean'), ], doc: 'Subversion')
    method(name: 'tm', type: 'Object', params: [stringWithMacro:'java.lang.String'], doc: 'Expand a string containing macros')
    method(name: 'unstash', type: 'Object', params: [name:'java.lang.String'], doc: 'Restore files previously stashed')
    method(name: 'validateDeclarativePipeline', type: 'Object', params: [path:'java.lang.String'], doc: 'Validate a file containing a Declarative Pipeline')
    method(name: 'withGradle', type: 'Object', params: [body:'Closure'], doc: 'WithGradle')
    method(name: 'wrap', type: 'Object', params: [delegate:Map, body:'Closure'], doc: 'General Build Wrapper')
    method(name: 'writeFile', type: 'Object', namedParams: [parameter(name: 'file', type: 'java.lang.String'), parameter(name: 'text', type: 'java.lang.String'), parameter(name: 'encoding', type: 'java.lang.String'), ], doc: 'Write file to workspace')
    method(name: 'archive', type: 'Object', params: [includes:'java.lang.String'], doc: 'Advanced/Deprecated Archive artifacts')
    method(name: 'archive', type: 'Object', namedParams: [parameter(name: 'includes', type: 'java.lang.String'), parameter(name: 'excludes', type: 'java.lang.String'), ], doc: 'Archive artifacts')
    method(name: 'dockerFingerprintFrom', type: 'Object', namedParams: [parameter(name: 'dockerfile', type: 'java.lang.String'), parameter(name: 'image', type: 'java.lang.String'), parameter(name: 'commandLine', type: 'java.lang.String'), parameter(name: 'toolName', type: 'java.lang.String'), ], doc: 'Record trace of a Docker image used in FROM')
    method(name: 'unarchive', type: 'Object', params: [:], doc: 'Advanced/Deprecated Copy archived artifacts into the workspace')
    method(name: 'unarchive', type: 'Object', namedParams: [parameter(name: 'mapping', type: 'java.util.Map'), ], doc: 'Copy archived artifacts into the workspace')
    method(name: 'withDockerContainer', type: 'Object', params: [image:java.lang.String, body:'Closure'], doc: 'Advanced/Deprecated Run build steps inside a Docker container')
    method(name: 'withDockerContainer', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'image', type: 'java.lang.String'), parameter(name: 'args', type: 'java.lang.String'), parameter(name: 'toolName', type: 'java.lang.String'), ], doc: 'Run build steps inside a Docker container')
    method(name: 'withDockerRegistry', type: 'Object', params: [registry:Map, body:'Closure'], doc: 'Advanced/Deprecated Sets up Docker registry endpoint')
    method(name: 'withDockerRegistry', type: 'Object', params: [body:Closure], namedParams: [parameter(name: 'registry', type: 'Map'), parameter(name: 'toolName', type: 'java.lang.String'), ], doc: 'Sets up Docker registry endpoint')
    method(name: 'withDockerServer', type: 'Object', params: [server:Map, body:'Closure'], doc: 'Advanced/Deprecated Sets up Docker server endpoint')
  }
}
