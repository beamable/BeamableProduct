using Beamable.Api.Autogenerated.Models;
using System;
using System.Collections.Generic;

namespace Beamable.Common.Runtime
{
	public static class FederationComponentNames
	{
		public static readonly Dictionary<Type, string> FederationComponentToName = new Dictionary<Type, string>
		{
			[typeof(IFederatedLogin<>)] = "IFederatedLogin",
			[typeof(IFederatedInventory<>)] = "IFederatedInventory",
			[typeof(ISupportsFederatedLogin<>)] = "IFederatedLogin",
			[typeof(IFederatedInventory<>)] = "IFederatedInventory",
			[typeof(IFederatedGameServer<>)] = "IFederatedGameServer",
		};

		public static FederationType GetFederationType(string federationName)
		{
			switch (federationName)
			{
				case "IFederatedLogin":
					return FederationType.IFederatedLogin;
				case "IFederatedInventory":
					return FederationType.IFederatedInventory;
				case "IFederatedCommerce":
					return FederationType.IFederatedCommerce;
				case "IFederatedGameServer":
					return FederationType.IFederatedGameServer;
				default:
					throw new InvalidOperationException(
						$"the given federation name=[{federationName}] is not mapped to a federation enum value");
			}
		}
	}
}
