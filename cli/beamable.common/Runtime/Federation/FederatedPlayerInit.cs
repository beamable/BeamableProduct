using Beamable.Api.Autogenerated.Accounts;
using Beamable.Api.Autogenerated.Auth;
using Beamable.Api.Autogenerated.Models;
using System.Collections.Generic;

namespace Beamable.Common
{
	public interface IFederatedPlayerInit<in T> : IFederation where T : IFederationId, new()
	{
		/// <summary>
		/// The player's new token won't come back until this method completes
		/// </summary>
		/// <param name="req"></param>
		/// <returns></returns>
		Promise CreatePlayer(FederatedPlayerInitRequest req);
	}

	public class FederatedPlayerInitRequest
	{
		
		static void Doop()
		{
			IAuthApi api;
			// TODO: regenerate the auto-gen and see an 'init-properties' that will get forward to the properties
			api.PostToken(new TokenRequestWrapper
			{
				
			})
		}
		
		public Account account;
		public Dictionary<string, string> properties;
	}
}
