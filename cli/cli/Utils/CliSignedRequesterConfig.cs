using Beamable.Api.Autogenerated.Realms;
using Beamable.Common;
using Beamable.Common.Api;
using Beamable.Server;
using Beamable.Server.Common;
using Beamable.Tooling.Common;

namespace cli.Utils;

public class CliSignedRequesterConfig : ISignedRequesterConfig
{
    private IRealmsApi _realmsApi;
    private IAppContext _appContext;
    public string Host { get; }
    public Func<Promise<string>> RealmSecretGenerator { get; }
    public string ApiVersion => "1";
    
    public CliSignedRequesterConfig(IRealmsApi realmsApi, IAppContext appContext)
    {
        _appContext = appContext;
        _realmsApi = realmsApi;
        Host = appContext.Host;
        RealmSecretGenerator = GetSecret;
    }

    public async Promise<string> GetSecret()
    {
        try
        {
            var res = await _realmsApi.GetAdminCustomer();
            var project = res.customer.projects.FirstOrDefault(p => p.name == _appContext.ProjectName);
            return project.secret;
        }
        catch (RequesterException ex) when (ex.Status == 401)
        {
            throw new CliException(
                message: $"The authorization context is not sufficient for the current realm=[{_appContext.ProjectName}]. " +
                         $"If you have not logged into the current realm, then you must do so. " +
                         $"Run the `beam login` command and retry. ");
        }
    }
}