<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>disable</Nullable>

    <RollForward>LatestMajor</RollForward>
    
    <IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</IsWindows>
    <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
    
    <PackageId>Beamable.Tools</PackageId>
    <AssemblyName>Beamable.Tools</AssemblyName>
    <Authors>Beamable Team</Authors>
    <Company>Beamable</Company>
    <PackageTags>Beamable;Game Server;Unity;Unreal;Games;Microservice;CLI</PackageTags>
    <PackageProjectUrl>https://beamable.com</PackageProjectUrl>
    <PackageReleaseNotes>https://beamable.github.io/changes/</PackageReleaseNotes>
    <Description>
      The Beamable.Tools package is a dotnet tool that connects to the Beamable API and allows developers
      to manage their Beamable resources via the CLI.
    </Description>
<!--    <GenerateDocumentationFile>true</GenerateDocumentationFile>-->
    <NoWarn>$(NoWarn);1591;1574;1572;1587;1573</NoWarn>
    <VersionPrefix>$(VersionPrefix)</VersionPrefix>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageIcon>icon.jpg</PackageIcon>
    
    <BeamLatestBuildNumber>$([System.IO.File]::ReadAllText("$(MSBuildThisFileDirectory)/../../build-number.txt").Trim())</BeamLatestBuildNumber>
    <VersionPrefix Condition="'$(VersionPrefix)'=='' OR '$(BeamOverrideVersionWithLocalDev)'=='true'">0.0.123.$(BeamLatestBuildNumber)</VersionPrefix>

    <PackAsTool>true</PackAsTool>
    <ToolCommandName>beam</ToolCommandName>
    <PackageOutputPath>./nupkg</PackageOutputPath>
    <LangVersion>10</LangVersion>
    <TargetFrameworks>net8.0;net9.0</TargetFrameworks>
    <OutputType>Exe</OutputType>
    
  </PropertyGroup>

  <PropertyGroup Condition="'$(IsWindows)'=='true'">
    <DefineConstants>_WINDOWS</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsLinux)'=='true'">
    <DefineConstants>_LINUX</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants>BEAMABLE_DEVELOPER</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="CliWrap" Version="3.6.0" />
    <PackageReference Include="Csv" Version="2.0.93" />
    <PackageReference Include="Docker.DotNet" Version="3.125.14" />
    <PackageReference Include="Errata" Version="0.12.0" />
    <PackageReference Include="JetBrains.Annotations" Version="2022.3.1" />
    <PackageReference Include="Markdig" Version="0.31.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.0.0" />
    <PackageReference Include="Microsoft.OpenApi" Version="1.6.17" />
    <PackageReference Include="Microsoft.OpenApi.Readers" Version="1.6.14" />
    <PackageReference Include="NBomber" Version="4.1.0" />
    <PackageReference Include="NBomber.Http" Version="4.1.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="Sarif.Sdk" Version="4.4.0" />
    <PackageReference Include="SharpZipLib" Version="1.3.3" />
    <PackageReference Include="Spectre.Console" Version="0.48.0" />
    <PackageReference Include="Spectre.Console.Json" Version="0.47.0" />
    <PackageReference Include="System.CodeDom" Version="6.0.0" />
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" />
    <PackageReference Include="Microsoft.Build" Version="17.10.4" ExcludeAssets="runtime"/>
    <PackageReference Include="Microsoft.Build.Locator" Version="1.7.8" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.10.4" ExcludeAssets="runtime"/>
    <PackageReference Include="ZLogger" Version="2.5.10" />
  </ItemGroup>

  <ItemGroup>

    <None Include="$(MSBuildThisFileDirectory)/../../LICENSE.txt" Pack="true" PackagePath=""/>
    <None Include="$(MSBuildThisFileDirectory)/../../icon.jpg" Pack="true" PackagePath=""/>
    <None Include="$(MSBuildThisFileDirectory)/../../dev.sh" Pack="false" PackagePath=""/>
    <None Include="$(MSBuildThisFileDirectory)/../../setup.sh" Pack="false" PackagePath=""/>
    

    <ProjectReference Include="..\..\microservice\beamable.tooling.common\beamable.tooling.common.csproj" />
    <ProjectReference Include="..\..\cli\beamable.common\beamable.common.csproj" />
    <ProjectReference Include="..\..\cli\beamable.server.common\beamable.server.common.csproj" />
    
  </ItemGroup>

  <ItemGroup>
    <None Remove="Docs\**\*.md" />
    <EmbeddedResource Include="Docs\**\*.md" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Resources\" />
  </ItemGroup>

  <Target Name="BuildCLIInterface" AfterTargets="Pack" Condition="$(DOTNET_RUNNING_IN_CONTAINER)!=true AND $(SKIP_GENERATION)!=true">
    <Message Importance="high" Text="OutDir: $(OutputPath)" />

    <!-- Unix-Based -->
    <Exec Condition="'$(IsWindows)'!='true' And Exists('$(OutputPath)net9.0/')" Command="./$(OutputPath)net9.0/$(AssemblyName) generate-interface --engine unity --output=../../client/Packages/com.beamable/Editor/BeamCli/Commands" />
    
    <!-- Windows-Based -->
    <Exec Condition="'$(IsWindows)'=='true' And Exists('$(OutputPath)net9.0\')" Command=".\$(OutputPath)net9.0\$(AssemblyName) generate-interface --engine unity --output=..\..\client\Packages\com.beamable\Editor\BeamCli\Commands" />
  </Target>


  <!-- Add all binaries for the collector for all different supported platforms -->
  <ItemGroup>
    <None Include="$(MSBuildThisFileDirectory)Resources\collector-windows-amd64.exe" PackagePath="build/collector-files">
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>

    <None Include="$(MSBuildThisFileDirectory)Resources\collector-windows-arm64.exe" PackagePath="build/collector-files">
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>

    <None Include="$(MSBuildThisFileDirectory)Resources\collector-linux-amd64" PackagePath="build/collector-files">
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>

    <None Include="$(MSBuildThisFileDirectory)Resources\collector-linux-arm64" PackagePath="build/collector-files">
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>

    <None Include="$(MSBuildThisFileDirectory)Resources\collector-darwin-amd64" PackagePath="build/collector-files">
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>

    <None Include="$(MSBuildThisFileDirectory)Resources\collector-darwin-arm64" PackagePath="build/collector-files">
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>

    <None Include="$(MSBuildThisFileDirectory)Resources\clickhouse-config.yaml" PackagePath="build/collector-files">
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

</Project>
