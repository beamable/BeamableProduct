using Beamable.Api.Autogenerated.Realms;
using Microsoft.Extensions.DependencyInjection;
using System.CommandLine;

namespace cli.Dotnet;

public class GenerateEnvFileCommandArgs : CommandArgs
{
	public string output;
}

public class GenerateEnvFileCommand : AppCommand<GenerateEnvFileCommandArgs>
{
	public GenerateEnvFileCommand() : base("generate-env", "generate an .env file at a given location for a Microservice execution")
	{
	}

	public override void Configure()
	{
		AddArgument(new Argument<string>("output", "where to output the .env file"), (args, i) => args.output = i);
	}

	public override async Task Handle(GenerateEnvFileCommandArgs args)
	{
		// TODO: write an env file...
		var realmsApi = args.Provider.GetService<IRealmsApi>();
		var res = await realmsApi.GetAdminCustomer();
		var proj = res.customer.projects.FirstOrDefault(p => p.name == args.AppContext.Pid);
		
		var secret = proj.secret;
		var cid = args.AppContext.Cid;
		var pid = args.AppContext.Pid;
		var prefix = "chris"; // TODO
		var host = args.AppContext.Host.Replace("http", "ws") + "/socket";
		

	}
}
