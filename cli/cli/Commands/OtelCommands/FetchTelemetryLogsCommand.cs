using Beamable.Api.Autogenerated.Models;
using Beamable.Common.BeamCli.Contracts;
using cli.Services;

namespace cli.OtelCommands;

[Serializable]
public class FetchTelemetryLogsCommandArgs : CommandArgs
{
	// filters that I can think now: service-name, log-level, limit-rows, body-match, full-match or partial, time window
}

public class FetchTelemetryLogsResult
{
	public List<CliOtelLogRecord> allLogsFound;
}

public class FetchTelemetryLogsCommand : AtomicCommand<FetchTelemetryLogsCommandArgs, FetchTelemetryLogsResult>
{
	public FetchTelemetryLogsCommand() : base("logs", "Fetch logs from Clickhouse")
	{
	}

	public override void Configure()
	{
	}

	public override async Task<FetchTelemetryLogsResult> GetResult(FetchTelemetryLogsCommandArgs args)
	{
		OtelAuthConfig res = await args.OtelApi.GetOtelAuthReaderConfig();
		var result = await ClickhouseConnection.FetchLogs(res);

		return new FetchTelemetryLogsResult()
		{
			allLogsFound = result
		};
	}
}
