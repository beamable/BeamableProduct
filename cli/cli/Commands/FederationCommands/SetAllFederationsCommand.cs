using Beamable.Api.Autogenerated.Models;
using Beamable.Server;
using cli.Services;
using System.CommandLine;

namespace cli.FederationCommands;

public class SetAllFederationsCommandArgs : CommandArgs
{
	public string BeamoId;
	public List<string> FederationIds;
	public List<string> FederationInterfaces;

	public bool clear;
}

public class SetAllFederationsCommandOutput
{
	
}

public class SetAllFederationsCommand 
	: AtomicCommand<SetAllFederationsCommandArgs, SetAllFederationsCommandOutput>
{
	public SetAllFederationsCommand() : base("set", "Set all federations for a particular service")
	{
		IsHidden = true;
	}

	public override void Configure()
	{
		var microserviceArg = new Argument<string>("microservice", "The BeamoId of the microservice to add");
		AddArgument(microserviceArg, (args, i) => args.BeamoId = i);

		AddOption(new Option<bool>(new string[] { "--clear", "-c" }, "Erase all federations"),
			(args, i) => args.clear = i);
		
		var idsOption =
			new Option<List<string>>("--fed-id",
				"A federation id, must be in a parallel layout to the --fed-type option")
			{
				AllowMultipleArgumentsPerToken = true, 
				Arity = ArgumentArity.ZeroOrMore
			};
		AddOption(idsOption,
			(args, i) =>
			{
				// empty; validation in --fed-type binding
			});
		
		AddOption(
			new Option<List<string>>("--fed-type", "A federation type, must be in a parallel layout to the --fed-id option")
			{
				AllowMultipleArgumentsPerToken = true,
				Arity = ArgumentArity.ZeroOrMore
			},
			(args, opts, i) =>
			{
				var ids = opts.ParseResult.GetValueForOption(idsOption);
				args.FederationIds = ids;
				args.FederationInterfaces = i;

				if (args.FederationIds.Count != args.FederationInterfaces.Count)
				{
					throw new CliException("--fed-type and --fed-id values must have the same cardinality");
				}
			});
	}

	public override Task<SetAllFederationsCommandOutput> GetResult(SetAllFederationsCommandArgs args)
	{
		throw new CliException("This command is obsolete as now federations are auto-managed by the Microservices declarations and added to the OpenApi Specs");
	}
}
