using Beamable.Api.Autogenerated.Realms;
using Beamable.Server;

namespace cli;

public class GameListCommandArgs : CommandArgs
{
    public bool IncludeArchived;
}

public class GameListCommandResults
{
    public OrgRealmData[] VisibleGames;

}
public class GameListCommand : AtomicCommand<GameListCommandArgs, GameListCommandResults>
{
    public GameListCommand() : base("games", "Fetch the current list of games")
    {
    }

    public override void Configure()
    {
        AddOption(RealmListCommand.IncludeArchived, (args, b) => args.IncludeArchived = b);
    }

    public override async Task<GameListCommandResults> GetResult(GameListCommandArgs args)
    {
        var api = args.Provider.GetService<IRealmsApi>();
        var games = await api.GetGames();
        var orgRealmData = games.projects.ToRealmArray(args.AppContext.Cid, args.IncludeArchived);

        return new GameListCommandResults
        {
            VisibleGames = orgRealmData
        };
    }
}