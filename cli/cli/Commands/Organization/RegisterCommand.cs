using Beamable.Api.Autogenerated.Models;
using Beamable.Api.Autogenerated.Realms;
using Beamable.Common.Content;
using Spectre.Console;
using System.CommandLine;
using System.Linq.Expressions;
using cli.Utils;

namespace cli;

public class RegisterCommandArgs : CommandArgs
{
}

public class RegisterCommand : AppCommand<RegisterCommandArgs>, IStandaloneCommand
{
	
	public RegisterCommand() : base("new", "Create a new beamable organization")
	{
	}

	public override void Configure()
	{
	}

	public override async Task Handle(RegisterCommandArgs args)
	{
		AnsiConsole.Write(
			new FigletText("Beam")
				.Color(Color.Red));

		var url = args.AppContext.Host.Replace("api.", "portal.") + "/signup/registration";
		AnsiConsole.WriteLine("Welcome to Beamable. " +
		                      "You are creating a new Beamable organization. " +
		                      "If you already have an organization, use the 'beam init' command to sign in. " + 
		                      $"Otherwise, open a browser to {url} to create an organization, and then run `beam init` to sign in on the CLI. "
		                      );
		
		// const string url = "https://portal.beamable.com/signup/registration";
		
		
		var open = args.Quiet || AnsiConsole.Confirm($"Would you like to open the Beamable registration page in your browser?");

		if (!open)
		{
			AnsiConsole.WriteLine("Okay!");
			return;
		}
		
		AnsiConsole.WriteLine($"Opening {url}");
		AnsiConsole.WriteLine("Once you have created an organization, run `beam init` to log in on your CLI. ");
		MachineHelper.OpenBrowser(url);
	}

}
