using Beamable.Api.Autogenerated.Beamo;
using Beamable.Api.Autogenerated.Models;
using Beamable.Common.Content;
using Beamable.Server;
using cli.Options;
using System.CommandLine;

namespace cli.DeploymentCommands;

public class ListDeploymentsCommandArgs : CommandArgs, PaginationOptions.IPaginationArgs
{
	public OptionalInt Limit { get; set; }
	public OptionalInt Offset { get; set; }

	public OptionalBool showArchived;
}

public class ListDeploymentsCommandOutput
{
	public ManifestView[] deployments;
}

public class ListDeploymentsCommand : AtomicCommand<ListDeploymentsCommandArgs, ListDeploymentsCommandOutput>
	, ISkipManifest
{
	public ListDeploymentsCommand() : base("list", "list the deployments")
	{
	}

	public override void Configure()
	{
		AddAlias("ls");
		PaginationOptions.AddPaginationOptions(this);
		DeployArgs.AddArchivedOption(this, (args, i) => args.showArchived = i);

	}

	public override async Task<ListDeploymentsCommandOutput> GetResult(ListDeploymentsCommandArgs args)
	{
		var api = args.Provider.GetService<IBeamoApi>();

		
		var manifestsResponse = await api.GetManifests(args.showArchived, args.Limit, args.Offset);
		return new ListDeploymentsCommandOutput { deployments = manifestsResponse.manifests };
	}
}
