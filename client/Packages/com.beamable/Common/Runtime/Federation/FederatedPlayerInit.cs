// This file generated by a copy-operation from another project. 
// Edits to this file will be overwritten by the build process. 


using Beamable.Api.Autogenerated.Models;
using System;
using System.Collections.Generic;

namespace Beamable.Common
{
	/// <summary>
	/// Player Init Federation allows you to run custom server code when a new player token is created.
	/// The player's token request will not complete until the <see cref="CreatePlayer"/> function has finished.
	/// </summary>
	/// <typeparam name="T"></typeparam>
	public interface IFederatedPlayerInit<in T> : IFederation where T : IFederationId, new()
	{
		/// <summary>
		/// The player's new token won't come back until this method completes
		/// </summary>
		/// <param name="player"></param>
		/// <returns></returns>
		Promise CreatePlayer(PlayerInitiation player);
	}

	/// <summary>
	/// The <see cref="PlayerInitiation"/> data contains the <see cref="Account"/> information
	/// for the player that is initialization, as well as the initProperties provided in the
	/// token creation request. 
	/// </summary>
	[Serializable]
	public class PlayerInitiation
	{
		/// <summary>
		/// The <see cref="Account"/> information for the player that is initiating. 
		/// </summary>
		public Account account;
		
		/// <summary>
		/// The set of properties that were supplied as initProperties on the original request to
		/// create a new token
		/// </summary>
		public Dictionary<string, string> properties;
	}
}
