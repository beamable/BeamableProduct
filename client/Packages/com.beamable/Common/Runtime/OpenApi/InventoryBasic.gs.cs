
namespace Beamable.Api.Autogenerated.Inventory
{
	using Beamable.Api.Autogenerated.Models;
	using Beamable.Common;
	using Beamable.Common.Content;
	using IBeamableRequester = Beamable.Common.Api.IBeamableRequester;
	using Method = Beamable.Common.Api.Method;

	public partial interface IInventoryApi
	{
		Promise<ItemContentResponse> GetItems([System.Runtime.InteropServices.DefaultParameterValueAttribute(true)][System.Runtime.InteropServices.OptionalAttribute()] bool includeAuthHeader);
		Promise<CurrencyContentResponse> GetCurrency([System.Runtime.InteropServices.DefaultParameterValueAttribute(true)][System.Runtime.InteropServices.OptionalAttribute()] bool includeAuthHeader);
	}
	public partial class InventoryApi : IInventoryApi
	{
		public virtual Promise<ItemContentResponse> GetItems([System.Runtime.InteropServices.DefaultParameterValueAttribute(true)][System.Runtime.InteropServices.OptionalAttribute()] bool includeAuthHeader)
		{
			string gsUrl = "/basic/inventory/items";
			// make the request and return the result
			return _requester.Request<ItemContentResponse>(Method.GET, gsUrl, default(object), includeAuthHeader, Beamable.Serialization.JsonSerializable.FromJson<ItemContentResponse>);
		}
		public virtual Promise<CurrencyContentResponse> GetCurrency([System.Runtime.InteropServices.DefaultParameterValueAttribute(true)][System.Runtime.InteropServices.OptionalAttribute()] bool includeAuthHeader)
		{
			string gsUrl = "/basic/inventory/currency";
			// make the request and return the result
			return _requester.Request<CurrencyContentResponse>(Method.GET, gsUrl, default(object), includeAuthHeader, Beamable.Serialization.JsonSerializable.FromJson<CurrencyContentResponse>);
		}
	}
}
