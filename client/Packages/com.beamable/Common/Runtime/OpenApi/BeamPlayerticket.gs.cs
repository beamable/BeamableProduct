// this file was copied from nuget package Beamable.Common@5.1.0-PREVIEW.RC1
// https://www.nuget.org/packages/Beamable.Common/5.1.0-PREVIEW.RC1


namespace Beamable.Api.Autogenerated.Playerticket
{
    using Beamable.Api.Autogenerated.Models;
    using Beamable.Common.Content;
    using Beamable.Common;
    using IBeamableRequester = Beamable.Common.Api.IBeamableRequester;
    using Method = Beamable.Common.Api.Method;
    using Beamable.Common.Dependencies;
    
    public partial interface IBeamPlayerticketApi
    {
        /// <summary>
        /// Fetch the requested player's active Ticket information
        /// 
        /// GET call to `/api/players/{playerId}/matchmaking/tickets` endpoint.
        /// </summary>
        /// <param name="playerId">Player Id</param>
        /// <param name="includeAuthHeader">By default, every request will include an authorization header so that the request acts on behalf of the current user. When the includeAuthHeader argument is false, the request will not include the authorization header for the current user.</param>
        /// <returns>A promise containing the <see cref="TicketQueryResponse"/></returns>
        Promise<TicketQueryResponse> GetMatchmakingTickets(string playerId, [System.Runtime.InteropServices.DefaultParameterValueAttribute(true)] [System.Runtime.InteropServices.OptionalAttribute()] bool includeAuthHeader);
    }
    public partial class BeamPlayerticketApi : IBeamPlayerticketApi
    {
        /// <summary>
        /// Fetch the requested player's active Ticket information
        /// 
        /// GET call to `/api/players/{playerId}/matchmaking/tickets` endpoint.
        /// </summary>
        /// <param name="playerId">Player Id</param>
        /// <param name="includeAuthHeader">By default, every request will include an authorization header so that the request acts on behalf of the current user. When the includeAuthHeader argument is false, the request will not include the authorization header for the current user.</param>
        /// <returns>A promise containing the <see cref="TicketQueryResponse"/></returns>
        public virtual Promise<TicketQueryResponse> GetMatchmakingTickets(string playerId, [System.Runtime.InteropServices.DefaultParameterValueAttribute(true)] [System.Runtime.InteropServices.OptionalAttribute()] bool includeAuthHeader)
        {
            string gsUrl = "/api/players/{playerId}/matchmaking/tickets";
            gsUrl = gsUrl.Replace("{playerId}", _requester.EscapeURL(playerId.ToString()));
            // make the request and return the result
            return _requester.Request<TicketQueryResponse>(Method.GET, gsUrl, default(object), includeAuthHeader, this.Serialize<TicketQueryResponse>);
        }
    }
}
