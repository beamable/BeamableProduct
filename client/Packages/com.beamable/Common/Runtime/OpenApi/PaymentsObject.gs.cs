
namespace Beamable.Api.Autogenerated.Payments
{
	using Beamable.Api.Autogenerated.Models;
	using Beamable.Common;
	using Beamable.Common.Content;
	using IBeamableRequester = Beamable.Common.Api.IBeamableRequester;
	using Method = Beamable.Common.Api.Method;

	public partial interface IPaymentsApi
	{
		Promise<CommonResponse> Get(string objectId, [System.Runtime.InteropServices.DefaultParameterValueAttribute(true)][System.Runtime.InteropServices.OptionalAttribute()] bool includeAuthHeader);
	}
	public partial class PaymentsApi : IPaymentsApi
	{
		public virtual Promise<CommonResponse> Get(string objectId, [System.Runtime.InteropServices.DefaultParameterValueAttribute(true)][System.Runtime.InteropServices.OptionalAttribute()] bool includeAuthHeader)
		{
			string gsUrl = "/object/payments/{objectId}/";
			gsUrl = gsUrl.Replace("{objectId}", objectId);
			// make the request and return the result
			return _requester.Request<CommonResponse>(Method.GET, gsUrl, default(object), includeAuthHeader, Beamable.Serialization.JsonSerializable.FromJson<CommonResponse>);
		}
	}
}
