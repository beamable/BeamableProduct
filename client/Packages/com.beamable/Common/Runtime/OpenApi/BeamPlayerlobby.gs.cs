// This file generated by a copy-operation from another project. 
// Edits to this file will be overwritten by the build process. 


namespace Beamable.Api.Autogenerated.Playerlobby
{
    using Beamable.Api.Autogenerated.Models;
    using Beamable.Common.Content;
    using Beamable.Common;
    using IBeamableRequester = Beamable.Common.Api.IBeamableRequester;
    using Method = Beamable.Common.Api.Method;
    using Beamable.Common.Dependencies;
    
    public partial interface IBeamPlayerlobbyApi
    {
        /// <summary>
        /// Fetch the requested player's lobby information
        /// 
        /// GET call to `/api/players/{playerId}/lobbies` endpoint.
        /// </summary>
        /// <param name="playerId">Player Id</param>
        /// <param name="includeAuthHeader">By default, every request will include an authorization header so that the request acts on behalf of the current user. When the includeAuthHeader argument is false, the request will not include the authorization header for the current user.</param>
        /// <returns>A promise containing the <see cref="Lobby"/></returns>
        Promise<Lobby> GetLobbies(string playerId, [System.Runtime.InteropServices.DefaultParameterValueAttribute(true)] [System.Runtime.InteropServices.OptionalAttribute()] bool includeAuthHeader);
        /// <summary>
        /// If the requested player is in a lobby, remove the player
        /// 
        /// DELETE call to `/api/players/{playerId}/lobbies` endpoint.
        /// </summary>
        /// <param name="playerId">Player Id</param>
        /// <param name="includeAuthHeader">By default, every request will include an authorization header so that the request acts on behalf of the current user. When the includeAuthHeader argument is false, the request will not include the authorization header for the current user.</param>
        /// <returns>A promise containing the <see cref="ApiPlayersLobbiesDeletePlayerLobbyResponse"/></returns>
        Promise<ApiPlayersLobbiesDeletePlayerLobbyResponse> DeleteLobbies(string playerId, [System.Runtime.InteropServices.DefaultParameterValueAttribute(true)] [System.Runtime.InteropServices.OptionalAttribute()] bool includeAuthHeader);
    }
    public partial class BeamPlayerlobbyApi : IBeamPlayerlobbyApi
    {
        /// <summary>
        /// Fetch the requested player's lobby information
        /// 
        /// GET call to `/api/players/{playerId}/lobbies` endpoint.
        /// </summary>
        /// <param name="playerId">Player Id</param>
        /// <param name="includeAuthHeader">By default, every request will include an authorization header so that the request acts on behalf of the current user. When the includeAuthHeader argument is false, the request will not include the authorization header for the current user.</param>
        /// <returns>A promise containing the <see cref="Lobby"/></returns>
        public virtual Promise<Lobby> GetLobbies(string playerId, [System.Runtime.InteropServices.DefaultParameterValueAttribute(true)] [System.Runtime.InteropServices.OptionalAttribute()] bool includeAuthHeader)
        {
            string gsUrl = "/api/players/{playerId}/lobbies";
            gsUrl = gsUrl.Replace("{playerId}", _requester.EscapeURL(playerId.ToString()));
            // make the request and return the result
            return _requester.Request<Lobby>(Method.GET, gsUrl, default(object), includeAuthHeader, this.Serialize<Lobby>);
        }
        /// <summary>
        /// If the requested player is in a lobby, remove the player
        /// 
        /// DELETE call to `/api/players/{playerId}/lobbies` endpoint.
        /// </summary>
        /// <param name="playerId">Player Id</param>
        /// <param name="includeAuthHeader">By default, every request will include an authorization header so that the request acts on behalf of the current user. When the includeAuthHeader argument is false, the request will not include the authorization header for the current user.</param>
        /// <returns>A promise containing the <see cref="ApiPlayersLobbiesDeletePlayerLobbyResponse"/></returns>
        public virtual Promise<ApiPlayersLobbiesDeletePlayerLobbyResponse> DeleteLobbies(string playerId, [System.Runtime.InteropServices.DefaultParameterValueAttribute(true)] [System.Runtime.InteropServices.OptionalAttribute()] bool includeAuthHeader)
        {
            string gsUrl = "/api/players/{playerId}/lobbies";
            gsUrl = gsUrl.Replace("{playerId}", _requester.EscapeURL(playerId.ToString()));
            // make the request and return the result
            return _requester.Request<ApiPlayersLobbiesDeletePlayerLobbyResponse>(Method.DELETE, gsUrl, default(object), includeAuthHeader, this.Serialize<ApiPlayersLobbiesDeletePlayerLobbyResponse>);
        }
    }
}
