
using Beamable.Api.Autogenerated.Accounts;
using Beamable.Api.Autogenerated.Announcements;
using Beamable.Api.Autogenerated.Auth;
using Beamable.Api.Autogenerated.Beamo;
using Beamable.Api.Autogenerated.Calendars;
using Beamable.Api.Autogenerated.Chatv2;
using Beamable.Api.Autogenerated.Cloudsaving;
using Beamable.Api.Autogenerated.Commerce;
using Beamable.Api.Autogenerated.EventPlayers;
using Beamable.Api.Autogenerated.Events;
using Beamable.Api.Autogenerated.Groups;
using Beamable.Api.Autogenerated.GroupUsers;
using Beamable.Api.Autogenerated.Inventory;
using Beamable.Api.Autogenerated.Leaderboards;
using Beamable.Api.Autogenerated.Mail;
using Beamable.Api.Autogenerated.Matchmaking;
using Beamable.Api.Autogenerated.Notification;
using Beamable.Api.Autogenerated.Payments;
using Beamable.Api.Autogenerated.Push;
using Beamable.Api.Autogenerated.Realms;
using Beamable.Api.Autogenerated.Social;
using Beamable.Api.Autogenerated.Stats;
using Beamable.Api.Autogenerated.Tournaments;
using Beamable.Common;
using Beamable.Common.Dependencies;

namespace Beamable.Api.Autogenerated
{
	public class OpenApiRegistration
	{
		public static void RegisterOpenApis(IDependencyBuilder builder)
		{
			builder.AddSingleton<IAccountsApi, AccountsApi>();
			builder.AddSingleton<IAnnouncementsApi, AnnouncementsApi>();
			builder.AddSingleton<IAuthApi, AuthApi>();
			builder.AddSingleton<IBeamoApi, BeamoApi>();
			builder.AddSingleton<ICalendarsApi, CalendarsApi>();
			builder.AddSingleton<IChatv2Api, Chatv2Api>();
			builder.AddSingleton<ICloudsavingApi, CloudsavingApi>();
			builder.AddSingleton<ICommerceApi, CommerceApi>();
			builder.AddSingleton<IEventPlayersApi, EventPlayersApi>();
			builder.AddSingleton<IEventsApi, EventsApi>();
			builder.AddSingleton<IGroupsApi, GroupsApi>();
			builder.AddSingleton<IGroupUsersApi, GroupUsersApi>();
			builder.AddSingleton<IInventoryApi, InventoryApi>();
			builder.AddSingleton<ILeaderboardsApi, LeaderboardsApi>();
			builder.AddSingleton<IMailApi, MailApi>();
			builder.AddSingleton<IMatchmakingApi, MatchmakingApi>();
			builder.AddSingleton<INotificationApi, NotificationApi>();
			builder.AddSingleton<IPaymentsApi, PaymentsApi>();
			builder.AddSingleton<IPushApi, PushApi>();
			builder.AddSingleton<IRealmsApi, RealmsApi>();
			builder.AddSingleton<ISocialApi, SocialApi>();
			builder.AddSingleton<IStatsApi, StatsApi>();
			builder.AddSingleton<ITournamentsApi, TournamentsApi>();
		}
	}
}
