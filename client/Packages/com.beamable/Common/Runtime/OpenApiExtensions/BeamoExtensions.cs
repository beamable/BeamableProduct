// this file was copied from nuget package Beamable.Common@4.3.0
// https://www.nuget.org/packages/Beamable.Common/4.3.0

using System.Security.Cryptography;
using System.Text;

namespace Beamable.Api.Autogenerated.Models
{
	public static class BeamoExtensions
	{
		private static MD5 md5 = MD5.Create();
		public static string GetHash(string input)
		{
			byte[] data = md5.ComputeHash(Encoding.UTF8.GetBytes(input));

			var builder = new StringBuilder();
			for (int i = 0; i < data.Length; i++)
				builder.Append(data[i].ToString("x2"));
			return builder.ToString();
		}
		
		public static string ComputeChecksum(this ServiceReference reference)
		{
			// https://github.com/beamable/BeamableBackend/blob/main/core/src/main/scala/com/beamable/clients/beamo/RequestResponses.scala#L67
			return GetHash($"{reference.serviceName};{reference.imageId};{(reference.enabled ? "true" : "false")};{reference.templateId}");
		}

		public static void ResetChecksum(this ServiceReference reference)
		{
			reference.checksum = reference.ComputeChecksum();
		}
		
		
		public static string ComputeChecksum(this ServiceStorageReference reference)
		{
			// this is a rip of the scala hash algorithm happening on the server. 
			//  the Some() part in the template is due to the template being optional. 
			// This link is currently private, but still may be helpful.
			// https://github.com/beamable/BeamableBackend/blob/main/core/src/main/scala/com/beamable/clients/beamo/RequestResponses.scala#L124
			return GetHash($"{reference.id};{reference.storageType};{(reference.enabled ? "true" : "false")};Some({reference.templateId.Value})");
		}

		public static void ResetChecksum(this ServiceStorageReference reference)
		{
			reference.checksum = reference.ComputeChecksum();
		}
		
	}
}
