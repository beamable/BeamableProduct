using Beamable.Api;
using Beamable.Api.Autogenerated.Beamo;
using Beamable.Common.Api;
using Beamable.Common.Dependencies;
using Beamable.Editor;
using Beamable.Editor.Microservice.UI2.Models;
using Beamable.Editor.UI.Model;
using Beamable.Server.Editor.ManagerClient;

namespace Beamable.Server.Editor
{
	[BeamContextSystem]
	public class BeamableServerDependencies
	{
		[RegisterBeamableDependencies(-1000, RegistrationOrigin.EDITOR)]
		public static void Register(IDependencyBuilder builder)
		{
			builder.LoadSingleton(provider => new MicroservicesDataModel(provider.GetService<BeamEditorContext>()));
			builder.AddSingleton<MicroserviceManager>();
			builder.AddSingleton<MicroserviceDiscovery>();
			builder.AddGlobalStorage<UsamDataModel, EditorStorageLayer>();

			builder.AddSingleton(() => MicroserviceConfiguration.Instance);
		}

		[RegisterBeamableDependencies(-1000, RegistrationOrigin.RUNTIME)]
		public static void RegisterRuntime(IDependencyBuilder builder)
		{
			builder.AddSingleton<IServiceRoutingResolution, DefaultServiceRoutingResolution>();
			builder.AddSingleton<IServiceRoutingStrategy, DefaultServiceRoutingStrategy>(provider =>
			{
				// need access to the editor's auth scope.
				var api = BeamEditorContext.Default.ServiceScope.GetService<IBeamoApi>();
				return new DefaultServiceRoutingStrategy(api);
			});
		}
	}
}
