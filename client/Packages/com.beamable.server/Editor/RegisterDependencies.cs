using Beamable.Api;
using Beamable.Api.Autogenerated.Beamo;
using Beamable.Common.Api;
using Beamable.Common.Dependencies;
using Beamable.Server.Editor.Usam;

namespace Beamable.Server.Editor
{
	[BeamContextSystem]
	public class BeamableServerDependencies
	{
		[RegisterBeamableDependencies(-1000, RegistrationOrigin.EDITOR)]
		public static void Register(IDependencyBuilder builder)
		{
			builder.AddSingleton(() => MicroserviceConfiguration.Instance);
			builder.AddSingleton<CommonAreaService>();
		}

		[RegisterBeamableDependencies(-1000, RegistrationOrigin.RUNTIME)]
		public static void RegisterRuntime(IDependencyBuilder builder)
		{
			builder.AddSingleton<IServiceRoutingResolution, UsamRoutingResolution>();
			builder.AddSingleton<UsamRoutingStrategy, UsamRoutingStrategy>(_ =>
			{
				var usam = BeamEditorContext.Default.ServiceScope.GetService<UsamService>();
				return new UsamRoutingStrategy(usam);
			});
			builder.AddSingleton<IServiceRoutingStrategy>(p => p.GetService<UsamRoutingStrategy>());

			// builder.AddSingleton<IServiceRoutingResolution, DefaultServiceRoutingResolution>();
			// builder.AddSingleton<IServiceRoutingStrategy, DefaultServiceRoutingStrategy>(provider =>
			// {
			// 	// need access to the editor's auth scope.
			// 	var api = BeamEditorContext.Default.ServiceScope.GetService<IBeamoApi>();
			// 	return new DefaultServiceRoutingStrategy(api);
			// });
		}
	}
}
