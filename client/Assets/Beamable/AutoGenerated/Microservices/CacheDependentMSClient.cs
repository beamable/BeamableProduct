//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Server.CacheDependentMS"/> </summary
    public sealed class CacheDependentMSClient : Beamable.Server.MicroserviceClient
    {
        
        /// <summary>
        /// Call the Add method on the CacheDependentMS microservice
        /// <see cref="Beamable.Server.CacheDependentMS.Add"/>
        /// </summary>
        public Beamable.Common.Promise<System.Threading.Tasks.Task> Add(int a)
        {
            string serialized_a = this.SerializeArgument<int>(a);
            string[] serializedFields = new string[] {
                    serialized_a};
            return this.Request<System.Threading.Tasks.Task>("CacheDependentMS", "Add", serializedFields);
        }
        
        /// <summary>
        /// Call the ReadAll method on the CacheDependentMS microservice
        /// <see cref="Beamable.Server.CacheDependentMS.ReadAll"/>
        /// </summary>
        public Beamable.Common.Promise<System.Collections.Generic.List<int>> ReadAll()
        {
            string[] serializedFields = new string[0];
            return this.Request<System.Collections.Generic.List<int>>("CacheDependentMS", "ReadAll", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersCacheDependentMSClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Int32 : Beamable.Server.MicroserviceClientDataWrapper<int>
        {
        }
    }
}
