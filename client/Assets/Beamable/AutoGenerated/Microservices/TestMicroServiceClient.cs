//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Server.TestMicroService"/> </summary
    public sealed class TestMicroServiceClient : Beamable.Server.MicroserviceClient
    {
        
        public TestMicroServiceClient(Beamable.BeamContext context = null) : 
                base(context)
        {
        }
        
        /// <summary>
        /// Call the ServerCall method on the TestMicroService microservice
        /// <see cref="Beamable.Server.TestMicroService.ServerCall"/>
        /// </summary>
        public Beamable.Common.Promise<Beamable.Common.Unit> ServerCall()
        {
            string[] serializedFields = new string[0];
            return this.Request<Beamable.Common.Unit>("TestMicroService", "ServerCall", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersTestMicroServiceClient
    {
    }
    
    internal static class ExtensionsForTestMicroServiceClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<TestMicroServiceClient>();
        }
        
        public static TestMicroServiceClient TestMicroService(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<TestMicroServiceClient>();
        }
    }
}
