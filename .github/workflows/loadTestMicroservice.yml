name: Perf Test Microservices

on:
  pull_request:
    branches:
      - 'main'
    paths-ignore:
      - 'rfc/**'
      - '.github/**'
      - 'client_installer/**'
jobs:
  runPerfTest:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    concurrency:
      group: stresstest-${{ github.head_ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.1
          cache-dependency-path: ./otel-collector/beamable-collector/go.sum
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x
      - name: Install Dotnet Counters
        run: |
          dotnet tool install --global dotnet-counters --version 7.0.447801
      - name: Build and Install BEAM CLI 
        working-directory: ./
        run: |
          ./setup.sh
          ./dev.sh --skip-unity --skip-unreal
        env:
          PROJECT_DIR_OVERRIDE: ${{ github.workspace }}/NugetBuildDir/
      - name: Login to BEAM CLI
        working-directory: ./stress-tests/standalone-microservice
        run: |
          dotnet tool restore
          dotnet beam login --username ${{ secrets.BEAM_STRESSTEST_EMAIL }} --password ${{ secrets.BEAM_STRESSTEST_PASS }} --save-to-file -q
      - name: Build Microservice
        working-directory: ./stress-tests/standalone-microservice/services/standalone-microservice
        run: |
          dotnet build
      - name: Run Microservice (with profiler)
        working-directory: ./stress-tests/standalone-microservice/services/
        run: |
          cd ./standalone-microservice/bin/Debug/net8.0
      

          echo "starting counters"
          mkdir ../../../../reports
          dotnet-counters collect --diagnostic-port ~/myport.sock --refresh-interval 3 --format json --output ../../../../reports/counter.json &
          
          echo "starting service"
          mkdir ../../../../logs
          LOG_PATH=../../../../logs/serviceRuntime.log DOTNET_DiagnosticPorts=~/myport.sock ./standalone-microservice &
          
          echo "starting profiler"
          cd ../../../..
          echo '{"a":3,"b":4}' > payload.json
          beam profile run-nbomber standalone-microservice add --body ./payload.json --include-prefix false --rps 30
          echo "jobs"
          jobs -p
          echo "kill"
          kill $(jobs -p)
          ls
          ls ./logs
          echo "showing logs"
          cat ./logs/serviceRuntime.log
          cp ./logs/serviceRuntime.log ./reports/serviceRuntime.log
      - name: Save Profiler Data 
        uses: actions/upload-artifact@v4
        with:
          name: profiler
          if-no-files-found: error
          retention-days: 1
          path: |
            ./stress-tests/standalone-microservice/services/reports
      - name: Check Dotnet Counters
        id: counters
        continue-on-error: true
        working-directory: ./stress-tests/standalone-microservice/services/reports
        run: |
          echo "log='$(beam profile check-counters ./counter.json --cpu-limit 35 --mem-limit 250)'" >> $GITHUB_OUTPUT
      - name: Check NBomber
        id: nbomber
        continue-on-error: true
        working-directory: ./stress-tests/standalone-microservice/services/reports
        run: |
          echo "log='$(beam profile check-nbomber ./report.csv --p95-limit 9000)'" >> $GITHUB_OUTPUT
      - name: Debug NBomber Output
        run: |
          echo NBOMBER OUTPUT: ${{steps.nbomber.outputs.log}}
      - name: Debug Counters Output
        run: |
          echo COUNTERS OUTPUT: ${{steps.counters.outputs.log}}
      - name: Summary
        run: |
          echo "### Test results! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo NBOMBER OUTPUT: ${{steps.nbomber.outputs.log}} >> $GITHUB_STEP_SUMMARY
          echo COUNTERS OUTPUT: ${{steps.counters.outputs.log}}>> $GITHUB_STEP_SUMMARY
      - name: Post to a Slack channel
        id: slack
        if: ${{!contains(steps.nbomber.outputs.log, 'No issues found') || !contains(steps.counters.outputs.log, 'No issues found')}}
        uses: slackapi/slack-github-action@v1.21.0
        with:
          channel-id: C0409CMRKA9
          slack-message: "Automated C#MS smoke tests failed! \nbomber: ${{steps.nbomber.outputs.log}} \ncounters: ${{steps.counters.outputs.log}} \n https://github.com/beamable/BeamableProduct/actions/runs/${{ github.run_id }} "
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Fail if checks failed
        if: ${{!contains(steps.nbomber.outputs.log, 'No issues found') || !contains(steps.counters.outputs.log, 'No issues found')}}
        run: |
          echo bomber: ${{steps.nbomber.outputs.log}} counters: ${{steps.counters.outputs.log}}
          exit 1
