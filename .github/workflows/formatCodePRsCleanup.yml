name: Manage Bot Pull Requests

on:
  pull_request:
    types: [opened, reopened]

jobs:
  close-old-bot-prs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install Octokit and lodash
      run: |
        npm install @octokit/rest lodash

    - name: Close all but the latest bot-tagged pull request
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: node -e "
        const { Octokit } = require('@octokit/rest');
        const _ = require('lodash');
        const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

        async function manageBotPRs() {
          const owner = '${{ github.repository_owner }}';
          const repo = '${{ github.event.repository.name }}';
          const response = await octokit.rest.pulls.list({
            owner,
            repo,
            state: 'open',
            per_page: 100,
          });
          const prs = response.data;

          const botPRs = prs.filter(pr => pr.labels.some(label => label.name === 'bot'));
          if (botPRs.length <= 1) return; // If there's 0 or 1 bot PR, do nothing.

          const sortedBotPRs = _.orderBy(botPRs, ['created_at'], ['desc']);
          const latestBotPR = sortedBotPRs.shift(); // Remove the latest PR from the list to keep it open

          for (const pr of sortedBotPRs) {
            await octokit.rest.pulls.update({
              owner,
              repo,
              pull_number: pr.number,
              state: 'closed'
            });
            console.log(`Closed PR #${pr.number} - '${pr.title}'`);
          }
        }

        manageBotPRs().catch(err => console.error('Failed to manage bot PRs:', err));
      "
