name: Docs

on:
  pull_request:
    branches:
      - 'main'
    paths:
      - 'client/**'
      - 'microservice/**'
  workflow_dispatch:
    inputs:
      s3Dest:
        description: 'The S3 output directory. Should be "DEV", or a semantic version, like "1.1.2".'     
        required: true
        default: 'DEV'
  push:
    tags:
      - '1.**'
      - '!1.**-PREVIEW**'

jobs:
  doxygen:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    concurrency:
      group: doxygen-${{ github.head_ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v2
      - name: Resolve S3 Destination
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          S3_INPUT=${{github.event.inputs.logLevel}}
          S3_A=${S3_INPUT:-$GITHUB_ENV}
          S3_B=${S3_A:-DEV}
          echo $GITHUB_ENV
          echo $S3_INPUT
          echo $S3_A
          echo $S3_B
          echo '::set-output name=S3_OUTPUT::${S3_B}'
        id: s3-dest-resolver
      - name: Check S3
        run: echo "The selected s3 dest is ${{ steps.s3-dest-resolver.outputs.S3_OUTPUT }}"
      # - uses: mattnotmitt/doxygen-action@v1.9.2
      #   name: Doxygen
      #   with:
      #     additional-packages: graphviz
      #     working-directory: './client/Packages'
      #     doxyfile-path: '../Doxyfile'
      # - name: Check LS
      #   run: |
      #     ls client/Packages/html
      #   shell: bash
      # - name: Archive
      #   run: |
      #     tar cfz docs-html.tar.gz ./client/Packages/html
      #   shell: bash
      # - uses: actions/upload-artifact@v2
      #   name: Keep Artifact
      #   if: always()
      #   with:
      #     path: docs-html.tar.gz
      #     retention-days: 3
      # - name: Upload to S3
      #   run: AWS_ACCESS_KEY_ID=${{secrets.AWS_KEY_ID}} AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}} AWS_REGION=us-west-2 aws s3 sync --delete client/Packages/html/ s3://${{secrets.S3_DOCS_BUCKET}}/${{github.event.inputs.logLevel}}/
      # - name: Prepare Cloudfront Invalidation 
      #   run: |
      #     CLOUD_DISTRO=E30NJLEQHJKLSL
      #     CALLER_REFERENCE=${{github.sha}}
      #     echo '{"DistributionId":"'${CLOUD_DISTRO}'","InvalidationBatch":{"CallerReference":"'${CALLER_REFERENCE}'","Paths":{"Quantity":1,"Items":["/${{github.event.inputs.logLevel}}/*"]}}}' >> cloudfront-invalidation.json
      # - name: Preview Cloudfront Invalidation 
      #   run: |
      #     cat cloudfront-invalidation.json
      # - name: Do Cloudfront Invalidation
      #   run: AWS_ACCESS_KEY_ID=${{secrets.AWS_KEY_ID}} AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}} AWS_REGION=us-west-2 aws cloudfront create-invalidation --cli-input-json file://cloudfront-invalidation.json